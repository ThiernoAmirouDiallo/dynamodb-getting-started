package com.thierno.dynamodbgettingstarted.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.AwsCredentials;
import software.amazon.awssdk.auth.credentials.AwsCredentialsProvider;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedTimestampRecordExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedUuidExtension;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.dynamodb.DynamoDbClient;

@Configuration
public class DynamoDBConfig
{
	@Value("${aws.access.key.id}")
	private String awsAccessKey;

	@Value("${aws.secret.access.key}")
	private String awsSecretKey;

	@Value("${aws.dynamodb.endpoint}")
	private String awsDynamoDBEndPoint;

	@Value("${aws.default.region}")
	private String awsRegion;

	@Bean
	public DynamoDbClient dynamoDbClient(AwsCredentialsProvider awsCredentialsProvider)
	{
		return DynamoDbClient.builder()
				.region(Region.of(awsRegion))
				.credentialsProvider(awsCredentialsProvider)
				.endpointOverride(java.net.URI.create(awsDynamoDBEndPoint))
				.build();
	}

	@Bean
	public DynamoDbEnhancedClient dynamoDbEnhancedClient(DynamoDbClient dynamoDbClient)
	{
		return DynamoDbEnhancedClient
				.builder()
				.dynamoDbClient(dynamoDbClient)
				.extensions(AutoGeneratedTimestampRecordExtension.create(), AutoGeneratedUuidExtension.create()) // to activate the auto-generated fields
				.build();
	}

	@Bean
	public AwsCredentialsProvider awsCredentialsProvider()
	{
		AwsCredentials awsCredentials = AwsBasicCredentials.create(awsAccessKey, awsSecretKey);
		return StaticCredentialsProvider.create(awsCredentials);
	}
}
